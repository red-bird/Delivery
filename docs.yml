openapi: 3.0.1
info:
  version: 1.0.0
  title: Delivery
#  description: A sample API that uses a petstore as an example to demonstrate features in the OpenAPI 3.0 specification
#  termsOfService: http://api.openapi.io/v1
#  contact:
#    name: Swagger API Team
#    email: apiteam@swagger.io
#    url: http://swagger.io
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /api/v1/restaurants/{id}:
    get:
      tags:
        - restaurant-controller-rest
      operationId: findRestaurant
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Restaurant'
    put:
      tags:
        - restaurant-controller-rest
      operationId: update
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Restaurant'
    delete:
      tags:
        - restaurant-controller-rest
      operationId: delete
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/v1/food/{id}:
    get:
      tags:
        - food-controller-rest
      operationId: findFood
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Food'
    put:
      tags:
        - food-controller-rest
      operationId: update_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Food'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Food'
    delete:
      tags:
        - food-controller-rest
      operationId: delete_1
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
  /api/v1/restaurants:
    get:
      tags:
        - restaurant-controller-rest
      operationId: findAllRestaurants
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Restaurant'
    post:
      tags:
        - restaurant-controller-rest
      operationId: save
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Restaurant'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Restaurant'
  /api/v1/food:
    get:
      tags:
        - food-controller-rest
      operationId: findAllFood
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Food'
    post:
      tags:
        - food-controller-rest
      operationId: save_1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Food'
        required: true
      responses:
        '200':
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Food'
components:
  schemas:
    Restaurant:
      required:
        - address
        - phone
        - worktime
      type: object
      properties:
        id:
          type: integer
          format: int64
        address:
          maxLength: 64
          minLength: 0
          type: string
        phone:
          maxLength: 16
          minLength: 0
          type: string
        worktime:
          maxLength: 64
          minLength: 0
          type: string
        description:
          maxLength: 512
          minLength: 0
          type: string
    Food:
      required:
        - name
        - price
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          maxLength: 63
          minLength: 0
          type: string
        type:
          maxLength: 31
          minLength: 0
          type: string
        description:
          maxLength: 1023
          minLength: 0
          type: string
        price:
          minimum: 0
          exclusiveMinimum: true
          type: number
          format: double
        filename:
          type: string
