version: '3.9'
volumes:
  pg_database:

services:
  db:
    image: postgres:13.2-alpine
    volumes:
      - pg_database:/var/lib/postgresql/data
    #    restart: on-failure
    environment:
      - POSTGRES_PASSWORD=0000
      - POSTGRES_DB=delivery
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build: ./.
    ports:
      - 8080:8080
    #    restart: on-failure
    environment:
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DB=delivery
      - DB_USER=postgres
      - DB_PASS=0000
      - ACTIVE_URL=http://localhost:8080
      - UPLOAD_PATH=static
      - EMAIL=${EMAIL}
      - EMAIL_PASSWORD=${EMAIL_PASSWORD}
      - SERVER_CAPTCHA_SECRET=${SERVER_CAPTCHA_SECRET}
      - CLIENT_CAPTCHA_SECRET=${CLIENT_CAPTCHA_SECRET}
      - REDIS_PASS=${REDIS_PASS}
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MONGO_HOST=mongo
      - MONGO_PORT=27017
      - MONGO_DB=mongo
      - MONGO_USER=root
      - MONGO_PASS=${MONGO_PASS}
    depends_on:
      - db

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASS}

  redis:
    image: redis:6.2.3-alpine
    ports:
      - "6379:6379"
    command: redis-server --requirepass ${REDIS_PASS}

  proxy:
    image: nginx:1.11 # this will use the latest version of 1.11.x
    ports:
      - '80:80' # expose 80 on host and sent to 80 in container
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
      - ./src/main/resources/static:/data/static/